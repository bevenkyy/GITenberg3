#!/usr/bin/env bash
#
# fff - fucking fast file-manager.

refresh() {
    printf '\e[?7l\e[?25l\e[2J\e[H'
    shopt -s checkwinsize; (:;:)
    [[ -z "${LINES:-$COLUMNS}" ]] && read -r LINES COLUMNS < <(stty size)
    ((j=LINES-3))
}

status() {
    printf '\e[2m\e[%s;H\e[K%b\e[m' "$((LINES-1))" "$1"
}

get_dir() {
    d=(); f=()
    for p in "$PWD"/*; do
        [[ -d "$p" ]] && d+=("$p")
        [[ -f "$p" ]] && f+=("$p")
    done
    f=("${d[@]}" "${f[@]}")
}

f_print() {
    for((i=${k:=0};i<(j=j>${#f[@]}?${#f[@]}:j);i++));{
        path="${f[$i]##*/}"
        [[ -d "${f[$i]}" ]] && path="\\e[1m\\e[31m${path}/\\e[m"
        [[ "${f[$i]}" == "${f[$((k+LINES/2-1))]}" ]] && path="\\e[7m${path}\\e[m"
        printf '\e[K%b\n' "$path"
    }

    status "$PWD ($j/${#f[@]})"$'\e[H'
}

open() {
    if [[ -d "$1" ]]; then
        refresh
        PWD="$1"
        get_dir
        f_print
    elif [[ -f "$1" ]]; then
        (xdg-open "$1" >/dev/null 2>&1 &)
    fi
}

key() {
    case "${1: -1}" in
        j) ((j==${#f[@]}))||((k=k>=j?k:++k,j=j<${#f[@]}?++j:j)) ;;
        k) ((k==0))||((k=k<=j?k>0?--k:0:j,j=j>0?--j:j)) ;;
        g) k=0 ;;
        G) ;;
        l) open "${f[$((k+LINES/2-1))]}"; k=0 ;;
        h) open "${PWD%/*}"; k=0 ;;
    esac
}

main() {
    refresh
    get_dir; f_print
    shopt -s nullglob extglob

    trap $'printf \'\e[?25h\e[?7h\e[999B\';shopt -u nullglob extglob' EXIT
    trap  'refresh; k=0' SIGWINCH

    for ((;;)); { f_print; read -rs -n 1; key "$REPLY"; }
}

main "$@"
